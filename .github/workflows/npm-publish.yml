name: Calculadora Abner

on:
  push:
    branches:
      - main  # Define que o fluxo será disparado para commits na branch 'main'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4  # Faz o checkout do código
      - uses: actions/setup-node@v4  # Configura a versão do Node.js
        with:
          node-version: '20'  # Versão do Node.js
      - run: npm ci  # Instala as dependências
      - run: npm test  # Executa os testes

  sonarcloud:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Set up Java 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Install dependencies
        run: npm install

      - name: Run SonarCloud Scan
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          npx sonar-scanner \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.projectKey=abnerbenicio_calculator-lib \
            -Dsonar.organization=baixium \
            -Dsonar.sources=src \
            -Dsonar.tests=tests \ # Verifique se este é o caminho correto para os testes
            -Dsonar.test.inclusions=**/*.test.ts \
            -Dsonar.typescript.lcov.reportPaths=coverage/lcov-report.json

  publish-npm:
    needs: build  # O job de publicação depende do sucesso do job de build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4  # Faz o checkout do código
      - uses: actions/setup-node@v4  # Configura a versão do Node.js
        with:
          node-version: '20'
          registry-url: https://registry.npmjs.org/  # URL do registro do NPM
      - run: npm ci  # Instala as dependências
      - run: npm publish --access=public  # Publica o pacote no NPM
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_KEY }}  # O token de autenticação do NPM

  # discord-notify:
  #   needs: publish-npm
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Send notification to Discord
  #       run: |
  #         curl -X POST -H "Content-Type: application/json" -d '{"content":"O pacote foi publicado com sucesso!"}' ${{ secrets.DISCORD_WEBHOOK_URL }}
