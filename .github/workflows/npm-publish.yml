name: Calculadora Abner

on:
  push:
    branches:
      - main  # Define que o fluxo será disparado para commits na branch 'main'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4  # Faz o checkout do código
      - uses: actions/setup-node@v4  # Configura a versão do Node.js
        with:
          node-version: '20'  # Versão do Node.js
      - run: npm ci  # Instala as dependências
      - run: npm test  # Executa os testes

  sonarcloud-analysis:
    name: SonarCloud Analysis
    runs-on: ubuntu-latest
    needs: build  # O job de análise depende que o job de build passe
    steps:
      - uses: actions/checkout@v4  # Faz o checkout do código
      - uses: actions/setup-node@v4  # Configura o Node.js
        with:
          node-version: '20'
      - name: SonarCloud Scan  # Ação do SonarCloud
        uses: SonarSource/sonarcloud-github-action@master  # Usando a versão master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Necessário para obter informações do PR, se houver
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}  # Token do SonarCloud, que você deve ter configurado no GitHub Secrets
        with:
          projectBaseDir: .  # Diretório do projeto (geralmente o root)
          args: >
            -Dsonar.organization=baixium  # Sua organização no SonarCloud
            -Dsonar.projectKey=abnerbenicio_calculator-lib  # Chave única do seu projeto no SonarCloud
            -Dsonar.sources=src  # Diretório onde o código fonte está
            -Dsonar.tests=src  # Diretório de testes
            -Dsonar.typescript.lcov.reportPaths=coverage/lcov-report.json  # Caminho do relatório de cobertura de testes em formato LCOV
            -Dsonar.test.inclusions=**/*.test.ts  # Inclusão dos arquivos de teste do TypeScript

  publish-npm:
    needs: build  # O job de publicação depende do sucesso do job de build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4  # Faz o checkout do código
      - uses: actions/setup-node@v4  # Configura a versão do Node.js
        with:
          node-version: '20'
          registry-url: https://registry.npmjs.org/  # URL do registro do NPM
      - run: npm ci  # Instala as dependências
      - run: npm publish --access=public  # Publica o pacote no NPM
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_KEY }}  # O token de autenticação do NPM

  # discord-notify:
  #   needs: publish-npm
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Send notification to Discord
  #       run: |
  #         curl -X POST -H "Content-Type: application/json" -d '{"content":"O pacote foi publicado com sucesso!"}' ${{ secrets.DISCORD_WEBHOOK_URL }}
